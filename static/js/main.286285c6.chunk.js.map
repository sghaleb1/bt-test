{"version":3,"sources":["logo.svg","js/main.js","reportWebVitals.js","index.js"],"names":["App","useState","newsData","setNewsData","searchData","setSearchData","currentInput","setCurrentInput","hasError","setHasError","url","req","Request","NewsArticle","data","className","title","source","name","description","replace","href","useEffect","fetch","then","response","json","catch","error","src","logo","alt","value","onChange","e","val","target","length","test","placeholder","articles","map","newsItem","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2JAAe,G,KAAA,IAA0B,kC,OCmG1BA,MA/Ff,WAEE,MAAgCC,qBAAhC,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAAoCF,mBAAS,MAA7C,mBAAOG,EAAP,KAAmBC,EAAnB,KACA,EAAwCJ,mBAAS,IAAjD,mBAAOK,EAAP,KAAqBC,EAArB,KACA,EAAgCN,oBAAS,GAAzC,mBAAOO,EAAP,KAAiBC,EAAjB,KAQMC,EAAG,UAHQ,uCAGR,+CAAqDN,EAArD,iBALQ,aAKR,qBANQ,GAMR,qCADM,oCAETO,EAAM,IAAIC,QAAQF,GA8BxB,SAASG,EAAT,GAAgC,IAATC,EAAQ,EAARA,KACrB,OACE,0BAASC,UAAU,OAAnB,UACE,iCACE,oBAAIA,UAAU,aAAd,SAA4BD,EAAKE,UAEnC,sBAAMD,UAAU,iBAAhB,SAAkCD,EAAKG,OAAOC,OAC9C,qBAAKH,UAAU,eAAf,SACE,4BAAID,EAAKK,YAAYC,QAAQ,cAAe,gBAE9C,mBAAGC,KAAMP,EAAKJ,IAAKK,UAAU,WAA7B,SAAyCD,EAAKJ,SAQpD,OA3CAY,qBAAU,WACRC,MAAMZ,GACHa,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACV,GAAD,OAAUX,EAAYW,MAC3Ba,OAAM,SAACC,GAAD,OAAWnB,EAAY,QAASmB,QACxC,CAACxB,IAuCF,sBAAKW,UAAU,WAAf,UAEE,wBAAQA,UAAU,aAAlB,SACE,qBAAKA,UAAU,UAAf,SACE,mBAAGM,KAAK,sBAAR,SAA8B,qBAAKQ,IAAKC,EAAMf,UAAU,WAAWgB,IAAI,eAI3E,sBAAKhB,UAAU,YAAf,UACE,oBAAIA,UAAU,mBAAd,8DAEA,yBAASA,UAAU,qBAAnB,SACE,sBAAKA,UAAU,WAAf,UACE,uBAAOA,UAAU,eAAeiB,MAAO1B,EAAc2B,SAAU,SAAAC,GAAC,OA7CpDC,EA6CqED,EAAEE,OAAOJ,MA3ClGzB,EAAgB4B,QACZA,EAAIE,OAAS,GAAa,MAARF,GAFF,WAGFG,KAAKH,IACnB9B,EAAc8B,IALpB,IAAsBA,GA6CsFI,YAAY,cAE7G/B,EAAW,sBAAKO,UAAU,mBAAf,8BAAmD,uBAAnD,iDACRb,EAAWA,EAASsC,SAASC,KAAI,SAACC,GAAD,OACjC,cAAC7B,EAAD,CAAaC,KAAM4B,GAAeA,EAAShC,QACxC,qBAAKK,UAAU,mBAAf,gCAKb,wBAAQA,UAAU,aAAlB,SACE,qBAAKA,UAAU,iBAAf,gDC/EO4B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBrB,MAAK,YAAkD,IAA/CsB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCFdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,K","file":"static/js/main.286285c6.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.a732cbbd.svg\";","import '../css/main.css';\r\nimport logo from '../logo.svg';\r\nimport React, { useEffect, useState } from \"react\";\r\n\r\nfunction App() {\r\n\r\n  const [newsData, setNewsData] = useState();\r\n  const [searchData, setSearchData] = useState('BT');\r\n  const [currentInput, setCurrentInput] = useState('');\r\n  const [hasError, setHasError] = useState(false);\r\n\r\n  const pageSize = 10;\r\n  const dateFrom = '2021-04-26';\r\n\r\n  const proxyUrl = \"https://cors-anywhere.herokuapp.com/\"; \r\n\r\n  const apiKey = \"64462cf79b3d449483ea5f2692e95e60\";\r\n  const url = `${proxyUrl}https://newsapi.org/v2/everything?q=${searchData}&from=${dateFrom}&pageSize=${pageSize}&sortBy=popularity&apiKey=${apiKey}`\r\n  const req = new Request(url);\r\n\r\n  // ####################################################\r\n  // useEffect hook used to request NewsApi at beginning and when search input onChange.\r\n  // ####################################################\r\n  useEffect(() => {\r\n    fetch(req)\r\n      .then((response) => response.json())\r\n      .then((data) => setNewsData(data))\r\n      .catch((error) => setHasError('error', error));\r\n  }, [searchData]);\r\n\r\n  // ####################################################\r\n  // Only request newsApi for correct input values, else error occurs.\r\n  // It was found that an error occurs when input is no value or 'space' \r\n  // Included regex to ensure value search is only ASCII, as error occurs for none ASCII\r\n  // ####################################################\r\n  function updateSearch(val) {\r\n    const searchRegex = /^[\\w ]+$/\r\n    setCurrentInput(val)\r\n    if (val.length > 0 && val !== ' ') {\r\n      if (searchRegex.test(val)) {\r\n        setSearchData(val)\r\n      }\r\n    }\r\n  }\r\n\r\n  // ####################################################\r\n  // News Article - Each article has the chosen layout and css \r\n  // ####################################################\r\n  function NewsArticle({ data }) {\r\n    return (\r\n      <article className=\"news\">\r\n        <header>\r\n          <h2 className=\"news-title\">{data.title}</h2>\r\n        </header>\r\n        <span className=\"news-publisher\">{data.source.name}</span>\r\n        <div className=\"news-content\">\r\n          <p>{data.description.replace(/(.{150})..+/, \"$1â€¦\")}</p>\r\n        </div>\r\n        <a href={data.url} className=\"news-url\">{data.url}</a>\r\n      </article >\r\n    );\r\n  }\r\n\r\n  // ####################################################\r\n  // Main React component \r\n  // ####################################################\r\n  return (\r\n    <div className=\"main-app\">\r\n\r\n      <header className=\"app-header\">\r\n        <div className=\"app-nav\">\r\n          <a href=\"https://www.bt.com/\"><img src={logo} className=\"app-logo\" alt=\"logo\" /></a>\r\n        </div>\r\n      </header>\r\n\r\n      <div className=\"container\">\r\n        <h1 className=\"container-header\">BT React Code Test - by Shahab Ghaleb - 27/04/21</h1>\r\n\r\n        <article className=\"all-news-container\">\r\n          <div className=\"all-news\">\r\n            <input className=\"search-input\" value={currentInput} onChange={e => updateSearch(e.target.value)} placeholder=\"Search...\" />\r\n            {/* Display newsApi if response success, else return 'Loading...' */}\r\n            {hasError ? <div className=\"request-response\">No results found.<br></br>Too many calls made: Please try again later</div>\r\n              : newsData ? newsData.articles.map((newsItem) => (\r\n                <NewsArticle data={newsItem} key={newsItem.url} />\r\n              )) : <div className=\"request-response\">Loading...</div>}\r\n          </div>\r\n        </article>\r\n      </div>\r\n\r\n      <footer className=\"app-footer\">\r\n        <div className=\"footer-content\">\r\n          Footer - News article search\r\n        </div>\r\n      </footer>\r\n\r\n    </div>\r\n  );\r\n}\r\nexport default App;\r\n\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './js/main';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}